---
apiVersion: apiextensions.k8s.io/v1
kind: CustomResourceDefinition
metadata:
  annotations:
    controller-gen.kubebuilder.io/version: v0.16.1
  labels:
    metadata.labels.odigos.io/config: "1"
    metadata.labels.odigos.io/system-object: "true"
  name: payloadcollection.rules.odigos.io
spec:
  group: rules.odigos.io
  names:
    kind: PayloadCollection
    listKind: PayloadCollectionList
    plural: payloadcollection
    singular: payloadcollection
  scope: Namespaced
  versions:
  - name: v1alpha1
    schema:
      openAPIV3Schema:
        properties:
          apiVersion:
            description: |-
              APIVersion defines the versioned schema of this representation of an object.
              Servers should convert recognized schemas to the latest internal value, and
              may reject unrecognized values.
              More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources
            type: string
          kind:
            description: |-
              Kind is a string value representing the REST resource this object represents.
              Servers may infer this from the endpoint the client submits requests to.
              Cannot be updated.
              In CamelCase.
              More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds
            type: string
          metadata:
            type: object
          spec:
            properties:
              dbPayloadCollectionRule:
                description: rule for collecting db payloads for the mentioned workload
                  and instrumentation libraries
                properties:
                  dropPartialPayloads:
                    description: |-
                      If the payload is larger than the maxContentLength, this parameter will determine if the payload should be partially collected up to the allowed length, or not collected at all.
                      This is useful if the db statement is only useful when complete.
                    type: boolean
                  maxPayloadLength:
                    description: |-
                      the maximum length of the payload to collect
                      This value relates to the actual payload length in the attribute, which might be different than the length in bytes due to encoding.
                      if the content length is below or equal to this value, the payload will be collected
                      if the content length is above this value, the decision to collect will be based on the dropPartialPayloads parameter
                    format: int64
                    type: integer
                type: object
              disabled:
                description: A flag for users allowing to temporarily disable the
                  rule, but keep it around for future use
                type: boolean
              httpPayloadCollectionRule:
                description: rule for collecting http payloads for the mentioned workload
                  and instrumentation libraries
                properties:
                  allowedMimeTypePatterns:
                    description: |-
                      which mime types to allow for collection, as specified in the http header
                      if any item in the list matches, the payload will be considered for collection
                      if empty list - non of the mime types will be collected
                      if nil - all mime types will be collected
                    items:
                      type: string
                    type: array
                  dropPartialPayloads:
                    description: |-
                      If the payload is larger than the maxContentLength, this parameter will determine if the payload should be partially collected up to the allowed length, or not collected at all.
                      This is useful if you require some decoding of the payload (like json) and having it partially is not useful.
                    type: boolean
                  maxPayloadLength:
                    description: |-
                      the maximum length of the payload to collect
                      This value relates to the actual payload length in the attribute, which might be different than the length in bytes due to encoding.
                      if the content length is below or equal to this value, the payload will be collected
                      if the content length is above this value, the decision to collect will be based on the dropPartialPayloads parameter
                    format: int64
                    type: integer
                type: object
              instrumentationLibraryNames:
                description: |-
                  For fine grained control, the user can specify the instrumentation library names to use.
                  If nil, all instrumentation libraries will be used.
                  If empty, no instrumentation libraries will be used.
                items:
                  type: string
                type: array
              notes:
                description: Place to document the purpose of the rule if desired
                type: string
              ruleName:
                description: free text to give a human readable name to the rule if
                  desired
                type: string
              workloads:
                description: |-
                  To which workloads should this rule apply
                  Empty list will make this rule ineffective for all workloads
                  nil will make this rule apply to all workloads
                items:
                  description: |-
                    PodWorkload represents the higher-level controller managing a specific Pod within a Kubernetes cluster.
                    It contains essential details about the controller such as its Name, Namespace, and Kind.
                    'Kind' refers to the type of controller, which can be a Deployment, StatefulSet, or DaemonSet.
                    This struct is useful for identifying and interacting with the overarching entity
                    that governs the lifecycle and behavior of a Pod, especially in contexts where
                    understanding the relationship between a Pod and its controlling workload is crucial.
                  properties:
                    kind:
                      description: |-
                        1. the pascal case representation of the workload kind
                        it is used in k8s api objects as the `Kind` field.
                      type: string
                    name:
                      type: string
                    namespace:
                      type: string
                  required:
                  - kind
                  - name
                  - namespace
                  type: object
                type: array
            type: object
          status:
            properties:
              conditions:
                description: |-
                  Represents the observations of a payloadcollection's current state.
                  Known .status.conditions.type are: "Available", "Progressing"
                items:
                  description: Condition contains details for one aspect of the current
                    state of this API Resource.
                  properties:
                    lastTransitionTime:
                      description: |-
                        lastTransitionTime is the last time the condition transitioned from one status to another.
                        This should be when the underlying condition changed.  If that is not known, then using the time when the API field changed is acceptable.
                      format: date-time
                      type: string
                    message:
                      description: |-
                        message is a human readable message indicating details about the transition.
                        This may be an empty string.
                      maxLength: 32768
                      type: string
                    observedGeneration:
                      description: |-
                        observedGeneration represents the .metadata.generation that the condition was set based upon.
                        For instance, if .metadata.generation is currently 12, but the .status.conditions[x].observedGeneration is 9, the condition is out of date
                        with respect to the current state of the instance.
                      format: int64
                      minimum: 0
                      type: integer
                    reason:
                      description: |-
                        reason contains a programmatic identifier indicating the reason for the condition's last transition.
                        Producers of specific condition types may define expected values and meanings for this field,
                        and whether the values are considered a guaranteed API.
                        The value should be a CamelCase string.
                        This field may not be empty.
                      maxLength: 1024
                      minLength: 1
                      pattern: ^[A-Za-z]([A-Za-z0-9_,:]*[A-Za-z0-9_])?$
                      type: string
                    status:
                      description: status of the condition, one of True, False, Unknown.
                      enum:
                      - "True"
                      - "False"
                      - Unknown
                      type: string
                    type:
                      description: type of condition in CamelCase or in foo.example.com/CamelCase.
                      maxLength: 316
                      pattern: ^([a-z0-9]([-a-z0-9]*[a-z0-9])?(\.[a-z0-9]([-a-z0-9]*[a-z0-9])?)*/)?(([A-Za-z0-9][-A-Za-z0-9_.]*)?[A-Za-z0-9])$
                      type: string
                  required:
                  - lastTransitionTime
                  - message
                  - reason
                  - status
                  - type
                  type: object
                type: array
                x-kubernetes-list-map-keys:
                - type
                x-kubernetes-list-type: map
            type: object
        type: object
    served: true
    storage: true
    subresources:
      status: {}
